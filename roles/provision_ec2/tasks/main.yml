---
# tasks to provision EC2 instances

- include_vars: "vars/main.yml"
  tags: provision

- name: Create a VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
    state: present
  register: vpc

- name: Attach an Internet Gateway to the VPC
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    state: present
    tags:
      Name: "sthw-aws-igw"
  register: vpcigw

- name: Create a subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    cidr: "{{ subnet_cidr }}"
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name }}"
  register: subnet
    
- name: Create a security group
  amazon.aws.ec2_group:
    name: "sigstore-the-hard-way-aws"
    description: "Security group for Sigstore deployment"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
          - 443
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        ports:
          - -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 0
        to_port: 65535
        cidr_ip: 172.31.50.0/24
      - proto: icmp
        ports:
          - -1
        cidr_ip: 172.31.50.0/24
      - proto: udp
        from_port: 0
        to_port: 65535
        cidr_ip: 172.31.50.0/24
  register: security_group

- name: Create a new EC2 key pair
  amazon.aws.ec2_key:
    # AWS credentials can be specified via the command line or as variables
    # aws_access_key: "{{ aws_access_key }}"
    # aws_secret_key: "{{ aws_secret_key }}"
    name: ec2_keypair
    region: "{{ region }}"
  register: keypair

- name: copy keypair locally to connect to instances via SSH
  copy: content="{{ keypair.key.private_key }}" dest="{{ ec2_key_directory }}"key.pem
  when: keypair.changed == true
      
- name: Create EC2 instances
  amazon.aws.ec2_instance:
    image_id: "ami-096800910c1b781ba"
    wait: yes
    instance_type: "t3.small"
    region: "{{ region }}"
    security_group: "{{ security_group.group_id }}"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    network:
      assign_public_ip: yes
    key_name: "{{ keypair.key.name }}"
    ebs_optimized: yes
    volumes:
    - device_name: "/dev/sda1"
      ebs:
        volume_type: gp2
        volume_size: 200
    tags:
      Name: "{{ item.name }}"
  loop: "{{ instances_to_tag }}"
  register: instances

- name: Allocate an Elastic IP for Rekor, Fulcio and OAuth2
  amazon.aws.ec2_eip:
    device_id: "{{ item.instance_ids[0] }}"
    in_vpc: true
  loop: "{{ instances.results }}"
  when: item.instances[0].tags.Name != "sigstore-ctl"